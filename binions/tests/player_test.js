// Generated by CoffeeScript 1.3.3
(function() {
  var Card, Player, assert;

  assert = require('assert');

  Card = require('../../hoyle').Card;

  Player = require('../player').Player;

  describe("Basic player", function() {
    beforeEach(function() {
      var bot, chips, name;
      bot = {
        update: function(game) {
          return 200;
        }
      };
      name = "Johnny Moss";
      chips = 1000;
      return this.player = new Player(bot, chips, name);
    });
    it("should have a name", function() {
      return assert.equal(this.player.name, 'Johnny Moss');
    });
    it("should be able to make a hand", function() {
      var hand;
      this.player.cards = [new Card('As'), new Card('Kh')];
      hand = this.player.makeHand([new Card('Ah'), new Card('Ks'), new Card('Td')]);
      return assert.equal(hand.name, "Two pair");
    });
    return describe("status", function() {
      it("should hide their cards during game play", function() {
        var status;
        this.player.cards = [new Card('As'), new Card('Kh')];
        status = this.player.status(Player.STATUS.PUBLIC);
        return assert.equal(void 0, status.cards);
      });
      it("should show their cards at the end", function() {
        var status;
        this.player.cards = [new Card('As'), new Card('Kh')];
        status = this.player.status(Player.STATUS.FINAL);
        return assert.equal(2, status.cards.length);
      });
      return it("should show their cards at the end unless they folded", function() {
        var status;
        this.player.cards = [new Card('As'), new Card('Kh')];
        this.player.state = 'folded';
        status = this.player.status(Player.STATUS.FINAL);
        return assert.equal(void 0, status.cards);
      });
    });
  });

}).call(this);
